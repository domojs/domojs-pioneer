{"version":3,"sources":["../api.ts"],"names":[],"mappings":";AAAA,yBAA2B;AAE3B,IAAI,WAAW,GAAqC,EAAE,CAAC;AACvD,IAAI,KAAK,GAAoE,EAAE,CAAC;AAChF,IAAI,UAAU,GAAkC,EAAE,CAAC;AAEnD,IAAI,YAAY,GAAG,UAAU,MAAM;IAE/B,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnB,MAAM,CAAC;IACX,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAC1B,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;IACpC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;QACT,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;IACtC,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAC9B,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IAChC,IAAI,YAAY,GAAG,KAAK,CAAC;IACzB,IAAI,WAAW,GAAG,KAAK,CAAC;IACxB,IAAI,cAAc,GAAG,KAAK,CAAC;IAC3B,IAAI,QAAQ,GAAG,UAAU,IAAI;QAEzB,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,YAAY,CAAC,CACjC,CAAC;YACG,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,IAAI,IAAI,OAAO,CAAC,CACvC,CAAC;gBACG,cAAc,GAAG,IAAI,CAAC;YAC1B,CAAC;YACD,IAAI,CACJ,CAAC;gBACG,YAAY,GAAG,IAAI,CAAC;gBACpB,WAAW,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBACrD,OAAO,CAAC,QAAQ,CAAC,cAAc,UAAU,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;oBAChB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;gBAC/C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;gBAChC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACnB,CAAC;QACL,CAAC;IACL,CAAC,CAAC;IACF,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACzC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACzC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC1C,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAChC,UAAU,CAAC;QAEP,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC;QACjD,WAAW,GAAG,IAAI,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC,CAAC;AACZ,CAAC,CAAC;AAGF,aAAoB,EAAE,EAAE,MAAM,EAAE,QAAQ;IAEpC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CACzB,CAAC;QACG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACtD,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,gBAAgB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;YAE1F,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,YAAY,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,IAAI,CACJ,CAAC;QACG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACxD,YAAY,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;AACL,CAAC;AAhBD,kBAgBC;AAAA,CAAC;AAEF,YAAmB,EAAE,EAAE,MAAM,EAAE,QAAQ;IAEnC,IAAI,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACzC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IAC/D,GAAG,CAAC,MAAM,GAAG,IAAI,EAAE,MAAM,EAAE,UAAU,KAAK,EAAE,IAAI;QAE5C,EAAE,CAAC,CAAC,KAAK,CAAC,CACV,CAAC;YACG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,QAAQ,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC;QACD,IAAI;YACA,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;AACP,CAAC;AAdD,gBAcC","file":"api.js","sourcesContent":["import * as net from 'net';\r\n\r\nvar connections: { [device: string]: net.Socket } = {};\r\nvar queue: { [device: string]: { command: string, callback: Function }[] } = {};\r\nvar processing: { [device: string]: boolean } = {};\r\n\r\nvar processQueue = function (device)\r\n{\r\n    if (processing[device])\r\n        return;\r\n    processing[device] = true;\r\n    var message = queue[device].shift();\r\n    if (!message)\r\n        return processing[device] = false;\r\n    var command = message.command;\r\n    var callback = message.callback;\r\n    var responseSent = false;\r\n    var commandSent = false;\r\n    var firstRReceived = false;\r\n    var receiver = function (data)\r\n    {\r\n        if (commandSent && !responseSent)\r\n        {\r\n            if (!firstRReceived && data == 'R\\r\\n')\r\n            {\r\n                firstRReceived = true;\r\n            }\r\n            else\r\n            {\r\n                responseSent = true;\r\n                connections[device].removeListener('data', receiver);\r\n                process.nextTick(function () { processing[device] = false; processQueue(device); });\r\n                if (!firstRReceived)\r\n                    data = data.replace(/(?:^R+)|(?:R+$)/, '');\r\n                data = data.replace(/[\\r\\n]+/g, '');\r\n                console.log('received:' + data);\r\n                callback(data);\r\n            }\r\n        }\r\n    };\r\n    connections[device].on('data', receiver);\r\n    connections[device].setEncoding('ASCII');\r\n    connections[device].on('error', callback);\r\n    connections[device].write('\\r');\r\n    setTimeout(function ()\r\n    {\r\n        connections[device].write('\\r' + command + '\\r');\r\n        commandSent = true;\r\n    }, 100);\r\n};\r\n\r\n\r\nexport function get(id, device, callback)\r\n{\r\n    if (!connections[device])\r\n    {\r\n        queue[device] = [{ command: id, callback: callback }];\r\n        connections[device] = net.createConnection({ port: 8102, allowHalfOpen: true, host: device }, function ()\r\n        {\r\n            console.log('connected');\r\n            processQueue(device);\r\n        });\r\n    }\r\n    else\r\n    {\r\n        queue[device].push({ command: id, callback: callback });\r\n        processQueue(device);\r\n    }\r\n};\r\n\r\nexport function VL(id, device, callback)\r\n{\r\n    var volume = (id * 185 / 100).toString();\r\n    volume = '000'.substring(0, volume.toString().length) + volume;\r\n    get(volume + 'VL', device, function (error, data)\r\n    {\r\n        if (error)\r\n        {\r\n            console.log(error);\r\n            callback(500);\r\n        }\r\n        else\r\n            callback(data);\r\n    });\r\n}"],"sourceRoot":"pioneer/src/server"}